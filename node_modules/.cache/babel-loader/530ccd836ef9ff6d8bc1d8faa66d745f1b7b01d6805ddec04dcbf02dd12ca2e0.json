{"ast":null,"code":"var _jsxFileName = \"/home/grant/documents/codingBootcamp/NewReactProjects/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeList = (numJokes = 5) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokes) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...jokeObj\n          } = res.data;\n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({\n              ...jokeObj,\n              votes: 0\n            });\n          } else {\n            console.log(\"This is a duplicate\");\n          }\n        }\n        setJokes(j);\n        setIsLoading(false);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokes]);\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n  };\n  const vote = (id, delta) => {\n    setJokes(allJokes => {\n      allJokes.map(j => j.id === id ? {\n        ...j,\n        votes: j.votes + delta\n      } : j);\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"is Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateNewJokes,\n      children: \"Get New Jokes!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), sortedJokes.map(({\n      joke,\n      id,\n      votes\n    }) => /*#__PURE__*/_jsxDEV(Joke, {\n      text: joke,\n      votes: votes,\n      vote: vote\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(JokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeList;\nexport default JokeList;\n\n// class JokeList extends Component {\n//   static defaultProps = {\n//     numJokesToGet: 5\n//   };\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       jokes: [],\n//       isLoading: true\n//     };\n\n//     this.generateNewJokes = this.generateNewJokes.bind(this);\n//     this.vote = this.vote.bind(this);\n//   }\n\n//   /* at mount, get jokes */\n\n//   componentDidMount() {\n//     this.getJokes();\n//   }\n\n//   /* retrieve jokes from API */\n\n//   async getJokes() {\n//     try {\n//       // load jokes one at a time, adding not-yet-seen jokes\n//       let jokes = [];\n//       let seenJokes = new Set();\n\n//       while (jokes.length < this.props.numJokesToGet) {\n//         let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//           headers: { Accept: \"application/json\" }\n//         });\n//         let { ...joke } = res.data;\n\n//         if (!seenJokes.has(joke.id)) {\n//           seenJokes.add(joke.id);\n//           jokes.push({ ...joke, votes: 0 });\n//         } else {\n//           console.log(\"duplicate found!\");\n//         }\n//       }\n\n//       this.setState({ jokes, isLoading: false });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   }\n\n//   /* empty joke list, set to loading state, and then call getJokes */\n\n//   generateNewJokes() {\n//     this.setState({ isLoading: true});\n//     this.getJokes();\n//   }\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   vote(id, delta) {\n//     this.setState(st => ({\n//       jokes: st.jokes.map(j =>\n//         j.id === id ? { ...j, votes: j.votes + delta } : j\n//       )\n//     }));\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   render() {\n//     let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n//     if (this.state.isLoading) {\n//       return (\n//         <div className=\"loading\">\n//           <i className=\"fas fa-4x fa-spinner fa-spin\" />\n//         </div>\n//       )\n//     }\n\n//     return (\n//       <div className=\"JokeList\">\n//         <button\n//           className=\"JokeList-getmore\"\n//           onClick={this.generateNewJokes}\n//         >\n//           Get New Jokes\n//         </button>\n\n//         {sortedJokes.map(j => (\n//           <Joke\n//             text={j.joke}\n//             key={j.id}\n//             id={j.id}\n//             votes={j.votes}\n//             vote={this.vote}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\n// export default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokes","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","j","seenJokes","Set","length","res","get","headers","Accept","jokeObj","data","has","id","add","push","votes","console","log","e","generateNewJokes","vote","delta","allJokes","map","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedJokes","sort","a","b","onClick","joke","text","_c","$RefreshReg$"],"sources":["/home/grant/documents/codingBootcamp/NewReactProjects/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\n\nconst JokeList = (numJokes = 5) => {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    async function getJokes(){\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try{\n        while (j.length < numJokes) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers:{Accept:\"application/json\"}\n          });\n          let {...jokeObj} = res.data;\n\n          if (!seenJokes.has(jokeObj.id)){\n            seenJokes.add(jokeObj.id);\n            j.push({...jokeObj, votes:0});\n          } else {\n            console.log(\"This is a duplicate\");\n          }\n        }\n        setJokes(j);\n        setIsLoading(false);\n      } catch(e){\n        console.log(e);\n      }\n    }\n    if(jokes.length === 0) getJokes();\n  }, [jokes, numJokes]);\n\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n  }\n\n  const vote = (id, delta) => {\n    setJokes(allJokes => {\n      allJokes.map(j => (j.id === id ? {...j, votes:j.votes+delta}:j))\n    })\n  }\n\n  if (isLoading) {\n    return (\n      <div>\n        <i>is Loading...</i>\n      </div>\n    )\n  }\n\n  let sortedJokes = [...jokes].sort((a,b) => b.votes - a.votes);\n\n  return (\n    <div>\n      <button onClick={generateNewJokes}>Get New Jokes!</button>\n\n      {sortedJokes.map(({joke, id, votes})=> (\n        <Joke text={joke} key={id} votes={votes} vote={vote} />\n      ))}\n    </div>\n  )\n}\n\nexport default JokeList;\n\n// class JokeList extends Component {\n//   static defaultProps = {\n//     numJokesToGet: 5\n//   };\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       jokes: [],\n//       isLoading: true\n//     };\n\n//     this.generateNewJokes = this.generateNewJokes.bind(this);\n//     this.vote = this.vote.bind(this);\n//   }\n\n//   /* at mount, get jokes */\n\n//   componentDidMount() {\n//     this.getJokes();\n//   }\n\n//   /* retrieve jokes from API */\n\n//   async getJokes() {\n//     try {\n//       // load jokes one at a time, adding not-yet-seen jokes\n//       let jokes = [];\n//       let seenJokes = new Set();\n\n//       while (jokes.length < this.props.numJokesToGet) {\n//         let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//           headers: { Accept: \"application/json\" }\n//         });\n//         let { ...joke } = res.data;\n\n//         if (!seenJokes.has(joke.id)) {\n//           seenJokes.add(joke.id);\n//           jokes.push({ ...joke, votes: 0 });\n//         } else {\n//           console.log(\"duplicate found!\");\n//         }\n//       }\n\n//       this.setState({ jokes, isLoading: false });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   }\n\n//   /* empty joke list, set to loading state, and then call getJokes */\n\n//   generateNewJokes() {\n//     this.setState({ isLoading: true});\n//     this.getJokes();\n//   }\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   vote(id, delta) {\n//     this.setState(st => ({\n//       jokes: st.jokes.map(j =>\n//         j.id === id ? { ...j, votes: j.votes + delta } : j\n//       )\n//     }));\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   render() {\n//     let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n//     if (this.state.isLoading) {\n//       return (\n//         <div className=\"loading\">\n//           <i className=\"fas fa-4x fa-spinner fa-spin\" />\n//         </div>\n//       )\n//     }\n\n//     return (\n//       <div className=\"JokeList\">\n//         <button\n//           className=\"JokeList-getmore\"\n//           onClick={this.generateNewJokes}\n//         >\n//           Get New Jokes\n//         </button>\n\n//         {sortedJokes.map(j => (\n//           <Joke\n//             text={j.joke}\n//             key={j.id}\n//             id={j.id}\n//             votes={j.votes}\n//             vote={this.vote}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\n// export default JokeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}